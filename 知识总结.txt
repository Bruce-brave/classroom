打开一个文件出现编码类报错，尝试在open里面加上encoding=‘utf8’ 
即： open('file.txt','r',encoding='utf8')
_____________________________

http请求方法
1.GET 向指定资源发出‘显示’请求，用来读取数据 

2.HEAD 与get一样是向服务器发出指定资源的请求，但服务器将不会传回资源的本文部分，
       用于在不必传输全部内容的情况下，获取关于该资源的相关信息

3.POST 向指定资源提交数据，请求服务器进行处理（如提交表单或者上传文件）。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源，        或二者皆有。

4.PUT 向指定资源位置上传最新内容

5.DELETE 请求服务器删除Request-URL所标识的资源

6.TRACE 回显服务器收到的请求，主要用于测试或诊断

7.OPTIONS 这个方法可使服务器传回该资源所支持的所有HTTP请求方法，用‘*’来代替资源名称，
          向web服务器发送OPTIONS请求，可以测试服务器功能是否正常运作
          
8.CONNECT HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接（经由非加密的HTTP代理服务器）。     

注意：1.方法名称是区分大小写的。
        当某个请求所针对的资源不支持对应的请求方法时，服务器返回状态码405（Method Not Allowed），当服务器不认识或者不支持对应的请求方法的时候，应当返回状态码501（Not Implemented）。
      2.HTTP服务器至少应该实现GET和HEAD方法，其他方法都是可选的。此外，除了上述方法，特定的HTTP服务器还能够扩展自定义的方法。  

——————————————————————————————————————————
HTTP状态码
所有HTTP响应的第一行都是状态行，依次是当前HTTP版本号，3位数字组成的状态代码，以及描述状态的短语，彼此由空格分隔。

状态代码的第一个数字代表当前响应的类型：

    1xx消息——请求已被服务器接收，继续处理
    2xx成功——请求已成功被服务器接收、理解、并接受
    3xx重定向——需要后续操作才能完成这一请求
    4xx请求错误——请求含有词法错误或者无法被执行
    5xx服务器错误——服务器在处理某个正确请求时发生错误

https://images2018.cnblogs.com/blog/877318/201804/877318-20180418161321986-304902913.png

——————————————————————————————————————————————————
URL
超文本传输协议（HTTP）的统一资源定位符将从因特网获取信息的五个基本元素包括在一个简单的地址中：

    传送协议。
    层级URL标记符号(为[//],固定不变)
    访问资源需要的凭证信息（可省略）
    服务器。（通常为域名，有时为IP地址）
    端口号。（以数字方式表示，若为HTTP的默认值“:80”可省略）
    路径。（以“/”字符区别路径中的每一个目录名称）
    查询。（GET模式的窗体参数，以“?”字符为起点，每个参数以“&”隔开，再以“=”分开参数名称与数据，通常以UTF8的URL编码，避开字符冲突的问题）
    片段。以“#”字符为起点

以http://www.luffycity.com:80/news/index.html?id=250&page=1 为例, 其中：
    http，是协议；
    www.luffycity.com，是服务器；
    80，是服务器上的默认网络端口号，默认不显示；
    /news/index.html，是路径（URI：直接定位到对应的资源）；
    ?id=250&page=1，是查询。
    大多数网页浏览器不要求用户输入网页中“http://”的部分，因为绝大多数网页内容是超文本传输协议文件。同样，“80”是超文本传输协议文件的常用端口号，因此一般也不必写明。一般来说用户只要键入统一资源定位符的一部分（www.luffycity.com:80/news/index.html?id=250&page=1）就可以了。
    
    由于超文本传输协议允许服务器将浏览器重定向到另一个网页地址，因此许多服务器允许用户省略网页地址中的部分，比如 www。从技术上来说这样省略后的网页地址实际上是一个不同的网页地址，浏览器本身无法决定这个新地址是否通，服务器必须完成重定向的任务。
    
    
